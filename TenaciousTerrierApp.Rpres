Tenacious Terrier Text Prediction
========================================================
css: slides.css
font-family: 'Calibri'
![](TerrierSpeech.png)

Thomas Hepner
<br>
April 2016

A Quick Demonstration
========================================================
<small>
- Step 1: Load [App](https://tenaciousterrier.shinyapps.io/TenaciousTerrierTextPrediction/) in Web Browser
<br>
<br>
- Step 2: Type words or phrase in text box
![](InputBar.png)
<br>
<br>
- Step 3: Visualize suggestions for next words
<br>
![](Predictions.png)
<br>

</small>

How It Works: Building Data Tables
========================================================
<small>
- Download English text from US blogs, tweets, and news articles
- Randomly sample 300,000 blogs posts and 100,000 tweets 
- Clean and tokenize data removing numbers, punctuation, convert to lowercase, etc.
<br>
<br>
<strong>Input: "It would 43 mean -; the World!"</strong>
<br>
<br>
<strong>Tokenized: "it"  ,  "would" , "mean"  , "the" , "world"</strong>
<br>
<br>
- Build data tables for 1, 2, 3, 4, and 5-grams
<br>
  4-Gram:
  <br>
  ![](FourGram.png)
  
***

  1-Gram:
  <br> 
  ![](OneGram.png)
  <br>
  2-Gram:
  <br> 
  ![](TwoGram.png)
  <br>
  3-Gram:
  <br>
  ![](ThreeGram.png)
</small>

How It Works: Prediction Algorithm
========================================================
<small>
- Clean and tokenize input text from user: 
<br>
![](InputBar2.png)
- Calculate probabilities for possible next words based on look-ups in N-gram tables
<br>
<br>
- Use Interpolation method to create weighted probabilities for each possible word
![](ModelProcess.png)

***

- Displays graph of top 5 predictions
![](world.png)

</small>

Evaluating Model Performance
========================================================
<small>
<br>
The model was evaluated using a test corpus of 1000 words, randomly chosen from the corpus
and excluding data used in the model building phase.
<br>
<br>
<strong> Word Accuracy: </strong>
- Top Word Accuracy: ~ 16.4%
- Top 3 Word Accuracy: ~ 27.4%
<br>
<br>

<strong> Latency: </strong>
- Loading Data Tables: ~ 0.8 seconds
- Word Prediction: ~ 0.4 seconds
- Loading Web Page: 5-10 seconds

</small>